[
    {
        "code": "int add(int a, int b) { return a + b; }"
    },
    {
        "code": "int multiply(int a, int b) { return a * b; }"
    },
    {
        "code": "void printArray(int arr[], int size) { for(int i = 0; i < size; i++) { printf(\"%d \", arr[i]); } }"
    },
    {
        "code": "int findMax(int arr[], int size) { int max = arr[0]; for(int i = 1; i < size; i++) { if(arr[i] > max) { max = arr[i]; } } return max; }"
    },
    {
        "code": "int binarySearch(int arr[], int left, int right, int x) { while(left <= right) { int mid = left + (right - left) / 2; if(arr[mid] == x) return mid; if(arr[mid] < x) left = mid + 1; else right = mid - 1; } return -1; }"
    },
    {
        "code": "void reverseArray(int arr[], int size) { int start = 0, end = size - 1; while(start < end) { int temp = arr[start]; arr[start] = arr[end]; arr[end] = temp; start++; end--; } }"
    },
    {
        "code": "int fibonacci(int n) { if(n <= 1) return n; return fibonacci(n - 1) + fibonacci(n - 2); }"
    },
    {
        "code": "void sortArray(int arr[], int size) { for(int i = 0; i < size - 1; i++) { for(int j = 0; j < size - i - 1; j++) { if(arr[j] > arr[j + 1]) { int temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; } } } }"
    },
    {
        "code": "int gcd(int a, int b) { if(b == 0) return a; return gcd(b, a % b); }"
    },
    {
        "code": "void swap(int *a, int *b) { int temp = *a; *a = *b; *b = temp; }"
    }
]
